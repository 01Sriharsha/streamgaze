// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String   @id @default(uuid())
  username       String   @unique
  imageUrl       String   @db.Text
  externalUserId String   @unique
  bio            String?  @db.Text
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  following      Follow[] @relation("Following")
  followedBy     Follow[] @relation("FollowedBy")
  Blocker        Block[]  @relation("Blocker")
  Blocked        Block[]  @relation("Blocked")
  Stream         Stream?  @relation("user")
}

model Follow {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  follower    User     @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  following   User     @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Block {
  id        String @id @default(uuid())
  blockerId String
  blockedId String
  blocker   User   @relation(name: "Blocker", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked   User   @relation(name: "Blocked", fields: [blockedId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([blockerId, blockedId])
  @@index([blockedId])
  @@index([blockerId])
}

model Stream {
  id           String   @id @default(uuid())
  name         String   @db.Text
  thumbnailUrl String?  @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  //to connect with streaming software
  ingressId String? @unique
  serverUrl String? @db.Text
  streamKey String? @db.Text

  //to control stream chat features
  isLive              Boolean @default(false)
  isChatEnabled       Boolean @default(true) //to disable or enable chat
  isChatDelay         Boolean @default(false) //to delay the chat speed
  isChatFollowersOnly Boolean @default(false) //to enable chat for followers only

  //relation
  userId String @unique
  user   User   @relation(name: "user", fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([ingressId])
  // @@fulltext([name])
}